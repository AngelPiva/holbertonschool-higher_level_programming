import module:
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

tests:

test 1:
>>> bg.integer_validator("my_int", 12)

test 2:
>>> bg.integer_validator("width", 89)

test 3:
>>> try:
...	bg.integer_validator("name", "John")
... except Exception as e:
...	print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer

test 4:
>>> try:
...	bg.integer_validator("age", 0)
... except Exception as e:
...	print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] age must be greater than 0

test 5:
>>> try:
...	bg.integer_validator("distance", -4)
... except Exception as e:
...	print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] distance must be greater than 0

test 6:
>>> try:
...     bg.integer_validator("name", True)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer

test 7:
>>> try:
...     bg.integer_validator("name", {"hola": "como_estas"})
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer

test 8:
>>> try:
...     bg.integer_validator("name", [1, 2, 3])
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer

test 9:
>>> try:
...     bg.integer_validator("name", (1, 2, 3))
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer

test 10:
>>> try:
...     bg.integer_validator()
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] integer_validator() missing 2 required positional arguments: 'name' and 'value'

test 11:
>>> try:
...     bg.integer_validator("name", 0)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] name must be greater than 0

test 12:
>>> try:
...     bg.integer_validator("name", None)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer

test 13:
>>> try:
...     bg.add_integer(4, 5)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[AttributeError] 'BaseGeometry' object has no attribute 'add_integer'

test 14:
>>> try:
...     bg.area()
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[Exception] area() is not implemented

test 15:
>>> try:
...     bg.integer_validator("name")
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] integer_validator() missing 1 required positional argument: 'value'
